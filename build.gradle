plugins {
  id 'application'
  id 'pmd'
  id 'org.sonarqube' version '3.3'
  id 'jacoco'
  id 'info.solidsoft.pitest' version '1.7.0'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.5.6'
  id 'uk.gov.hmcts.java' version '0.12.16'
  id 'org.owasp.dependencycheck' version '6.5.0.1'
  id 'com.github.ben-manes.versions' version '0.39.0'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

dependencies {
  integrationTestImplementation(sourceSets.test.output)
  functionalTestImplementation(sourceSets.test.output)
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
}

task smoke(type: Test, description: 'Runs Smoke Tests.') {
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

pmd {
  toolVersion = "6.21.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

repositories {
  mavenLocal()

  mavenCentral()
  jcenter()

  // jitpack should be last resort
  // see: https://github.com/jitpack/jitpack.io/issues/1939
  maven { url 'https://jitpack.io' }
  maven {
    url 'https://repo.spring.io/libs-milestone'
  }
}
project.tasks['pitest'].group = "Verification"

pitest {
  targetClasses = ['uk.gov.hmcts.reform.sscs.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.sscs.config.*',
    'uk.gov.hmcts.reform.sscs.bulkscancore.domain.*',
    'uk.gov.hmcts.reform.sscs.domain.*',
    'uk.gov.hmcts.reform.sscs.BulkScanApplication'
  ]
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 90
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
check.dependsOn integration
checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)
integration.shouldRunAfter(checkstyleIntegrationTest)
integration.shouldRunAfter(test)

sonarqube {
  properties {
    property "sonar.projectName", "SSCS - Bulk Scan"
    property "sonar.projectKey", "sscs-bulk-scan"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/sscs/domain/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/bulkscancore/domain/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/BulkScanApplication.java," +
      "src/main/java/uk/gov/hmcts/reform/sscs/domain/**," +
      "src/main/java/uk/gov/hmcts/reform/sscs/config/**,"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

// it is important to specify logback classic and core packages explicitly as libraries like spring boot
// enforces it's own (older) version which is not recommended.
def versions = [
  reformLogging      : '5.1.7',
  springBoot         : springBoot.class.package.implementationVersion,
  springfoxSwagger   : '2.9.2',
  lombok             : '1.18.20',
  springCloudWiremock: '2.1.0.RELEASE',
  gradlePitest       : '1.3.0',
  pitest             : '1.4.2',
  sonarPitest        : '0.5',
  restAssured        : '4.3.3'
]

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
        details.useVersion '2.11.0'
      }
      // CVE-2020-17521
      if (details.requested.group == 'org.codehaus.groovy') {
        details.useVersion "3.0.7"
        details.because "needed by rest-assured>=4.3"
      }
    }
  }
}

dependencies {
  def withoutJunit4 = {
    exclude group: 'junit', module: 'junit'
  }

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

  implementation("me.xdrop:fuzzywuzzy:1.3.1")
  implementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  implementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  implementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.0.5'
  implementation group: 'com.github.everit-org.json-schema', name: 'org.everit.json.schema', version: '1.14.0'
  implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
  implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.15.2'

  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'
  implementation group: 'com.github.hmcts', name: 'java-logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '4.0.0'

  implementation group: 'com.github.hmcts', name: 'sscs-common', version: '4.6.6'

  implementation group: 'com.microsoft.azure', name: 'applicationinsights-logging-logback', version: '2.6.3'
  implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.3'

  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testImplementation 'com.github.hmcts:fortify-client:1.2.1:all'

  functionalTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
    exclude group: "com.vaadin.external.google", module: "android-json"
  }

  testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
  testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.0'
  testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.31.0', withoutJunit4
  testImplementation group: 'com.typesafe', name: 'config', version: '1.4.1'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.junit.vintage:junit-vintage-engine:5.3.1'

  integrationTestImplementation(group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: versions.springCloudWiremock) {
    exclude group: "com.github.tomakehurst", module: "wiremock-standalone"
  }

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath
}

dependencyManagement {
  dependencies {
    //CVE-2019-10086
    dependency group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    //CVE-2021-27807, CVE-2021-27906, CVE-2021-31811, CVE-2021-31812
    dependency group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'

    dependency group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.15.0'
    dependency group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.15.0'

    //CVE-2021-40690
    dependency group: 'org.apache.santuario', name: 'xmlsec', version: '2.3.0'
    //CVE-2021-35515, CVE-2021-35516, CVE-2021-35517, CVE-2021-36090
    dependency group: 'org.apache.commons', name: 'commons-compress', version: '1.21'
    //CVE-2020-11987, CVE-2020-11988
    dependencySet(group: 'org.apache.xmlgraphics', version: '1.14') {
      entry 'batik-all'
    }
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processFunctionalTestResources") {
  duplicatesStrategy = 'include'
}
rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

run {
  def debug = System.getProperty("debug")
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}

mainClassName = 'uk.gov.hmcts.reform.sscs.BulkScanApplication'

tasks.withType(Test) {
  useJUnitPlatform()
}

bootJar {
  archiveName = 'sscs-bulk-scan.jar'

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}
